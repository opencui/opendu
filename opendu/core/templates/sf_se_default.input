{% from 'sf.base' import render_slot, render_dict %}



## Extraction Task
Given a JSON schema describing the expected configuration for the skill {{skill.name}}: {{skill.description }},  extract information from the given utterance with respect to the schema:

{{ render_dict(schema) }}

## Analysis Framework
1. **Intent Match**: the utterance can potentially mention more than one skills, only extract the information from portion of utterance that aligns with "{{skill.description}}"?
2. **Use provided candidate cautiously**: some context independent extractor have extract the information based on type only, but since the same type can be used more than once in some skill, like "city" can be used as both arrival and departure, you need to take the surrounding words into account, do not blindly trust candidates.
3. **Extract in the verbatim**: No need to do normalization in this step, just extract the raw information as is.
4. **Use common sense**: some information like first names are not provided as candidates, so use common sense to extract.

{% if examples %}
## Examples
{% for example in examples %}
**Input:**  
{{ example.input }}

**Expected Output:**  
{{ example.output }}

{% endfor %}
{% else %}
## Example
**Input:**  
"Book a table for two at 7 pm tomorrow at Sushi Place."

**Expected Output:**  
```json
{
  "restaurant": "Sushi Place",
  "datetime": "7 pm tomorrow",
  "party_size": "two"
}
{% endif %}

Now extract from the following input:
Input:  {{ utterance }}
Output (in JSON format):
